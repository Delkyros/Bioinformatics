# -*- coding: utf-8 -*-
"""FASTA TO AA converter

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZqeigafnuP0lmt33vPtT4QfMfLDD7Ti9
"""

import pandas as pd

aa_dict = {'A': 'Ala', 'R': 'Arg', 'N': 'Asn', 'D': 'Asp', 'C': 'Cys', 'Q': 'Gln', 'E': 'Glu',
           'G': 'Gly', 'H': 'His', 'I': 'Ile', 'L': 'Leu', 'K': 'Lys', 'M': 'Met', 'F': 'Phe',
           'P': 'Pro', 'S': 'Ser', 'T': 'Thr', 'W': 'Trp', 'Y': 'Tyr', 'V': 'Val'}
aa = pd.DataFrame(list(aa_dict.items()), columns=['AA_Fasta', 'Aminoacids'])

def fasta_to_aa(fasta, aa):
    letter_list = list(fasta)
    for i in range(len(letter_list)):
        amino_acid_code = aa[aa['AA_Fasta'] == letter_list[i]]['Aminoacids'].iloc[0]
        letter_list[i] = amino_acid_code
    return "-".join(letter_list)

fasta_to_aa("ANAP", aa)

"""### You can use a list of FASTA AA too...

This list is about a research I was doing. I defined that the data not mentioned or not found in the articles as NI (Not identified).
"""

FASTA_list = ['ANAP', 'NI', 'WPQRPPGIP', 'LPGRPPIKPWPL', 'ACKEP', 'NI', 'CTLEW', 'NI', 'NI', 'NI', 'NI', 'NI', 'KQDHCH', 'QCHKP, QCHQP, KCHKP, e KCHQP', 'YLLK, YLVPH e YRLD', 'NI', 'KCHKP', 'KWFCT e QWFCT', 'EW, DWDPK, ADGF, SGAF, ETTL e AGGF', 'VYTE, TKGQ, MMLQK, TPAIS, e VSAFLA', 'LAYLQYTDFETR', 'AVKVL, YLVR e TLVGR', 'ADGF, AGGF, AWDPE, DWDPK, ETTL e SGAF', 'EPNGLLLPQY', 'DDELRQA, DDELRAA e DGELRE', 'QWFH', 'NI', 'NI', 'NI', 'NI', 'NI', 'VEGNLQVLRPR e WSVWEQELEDR', 'VEGNLQVLRPR e HNLDTQTESDV', 'KWFCT e KWFM', 'QWFM', 'LVRL, LRYL, e VLLALVLLR', 'NI', 'NI', 'FPY', 'WEKPPVSH', 'IVVTRGRAT, QEDDNRR, RAPRMRWI, REEEQQR, QEERQEQR, AGGEPRDGQSGQ, MRPDEDEQEGQ, DDEENPRDPRE e GNPDDEFRPQ', 'APKIEEV', 'NI', 'NI', 'PPKNW', 'LPF', 'NI', 'EQVR, EQVK, AESE, EEDNK, EECK e EVEE', 'RPLY e MNPQR', 'EVSGPGLSPN', 'QGRPWG, PSRADIY AYNIPVNIAR', 'RPLY, PGPR, HGGR e GPY', 'NI', 'NI', 'GYCVSDNN', 'NI']

# Create a pandas DataFrame
fasta_df = pd.DataFrame({'sequence': FASTA_list})

def convert_fasta(aa_seq):
    return '-'.join([aa_dict.get(aa, '') for aa in aa_seq])

# create a new column with the converted sequence
fasta_df['Converted'] = fasta_df['sequence'].apply(lambda x: convert_fasta(x))
fasta_df

"""As you can see the NI is almost like a peptide (Asn-Ile). So I had to create a small data treatment to make it clear that it is not a peptide.

###Some final polishing...
"""

fasta_df['Converted'] = fasta_df['Converted'].apply(lambda x: 'N.I.' if x == 'Asn-Ile' else x)
fasta_df['Sum'] = fasta_df['sequence'] +" ("+fasta_df['Converted'] +")"
fasta_df['Sum'] = fasta_df['Sum'].apply(lambda x: 'N.I.' if x == 'NI (N.I.)' else x)

"""###Exporting to excel"""

fasta_df.to_excel("converted.xlsx", index=False)